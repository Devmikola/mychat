<% provide(:title, "Chat #{@chat.name}") %>
<h1> <%= "Chat #{@chat.name}" %> </h1>
<h3 class="members_names">
  <%= 'Members of chat: ' %>
  <%= render 'chats/members_list', members: @members %>
</h3>
<h3> <span id="num_unread_msgs"> <%= @num_unread_msgs %> </span> <%= ' unread messages' %> </h3>

<%
    if @chat.chatusers.count == 2
    confirm_message = 'This action will remove this chat.
This is because you are one of only two members.
All existing chat rooms must have at least two members.
Are you sure you want to disconnect and remove this chat ?'
    else
    confirm_message = "Are you sure you want to disconnect from #{@chat.name} ?"
    end
%>

<%= link_to 'Disconnect', self_disconnection_chat_path(@chat), data: { confirm: confirm_message } unless @chat.owner? current_user %>
<%= link_to 'Edit chat', edit_chat_path(@chat) if @chat.owner? current_user %>

<div id="ext_tbl_chat">
	<div class="chat">
		<table>
		   <% @chat.messages.each do |message| %>
			   <tr>
			   	   <td class="author_name">
			   	    	<%= link_to message.user.name_cptlz, user_path(message.user)%>
			   	   </td>
			   	   <td class="message_text">
			   	    	<%= message.text%>
			   	   </td>
			   	   <td class="msg_dttm">
			   	   		<%= message.created_at.strftime('%d %b %I:%M:%S') %>
			   	   </td>
			   </tr>
		   <% end %>
		</table>
    </div>
	<%= form_for @message, url: chat_path(@chat.id) + '/create_message', remote: true do |f| %>
    	<%= f.text_area :text, placeholder: 'Type message. You can send message with Ctrl + Enter', rows: 3 %>
    	<%= f.submit 'Send message', class: 'btn btn-large btn-primary', id: 'send_message' %>
	<% end %>
</div>


 <script type="text/javascript">

 	$(document).ready(function(){

        is_current_user_owner = <%= @chat.owner? current_user %>
		chat_refresh_url = "<%= chat_path(@chat) + '/refresh/' %>"
	 	current_user_name = "<%= current_user.name %>"
        members_names = <%= @chat.members_names.to_s.html_safe %>
        reset_unread_msgs_url = "<%= chat_path(@chat) + '/reset_unread_msgs' %>"
        count_messages = <%= @chat.messages.count %>


 		$(".chat").scrollTop($(".chat")[0].scrollHeight);
		$("#message_text").focus()

        function array_include(f_array, s_array)
        {
            return f_array.length > s_array.length && f_array.every(function(element, index) {
                return $.inArray(element, s_array[index])
            });
        }

        Array.prototype.diff = function(a) {
            return this.filter(function(i) {return a.indexOf(i) < 0;});
        };

		function refresh(){
            $.ajax({
            url: chat_refresh_url + count_messages,
            success: function(result){
                if((new_members = result['refresh_members_names'].diff(members_names)) && new_members.length)
                {
                    for (i = 0; i < new_members.length; i++ ) {
                        $(".chat table").append('<tr class="bot_message"><td></td><td>Member ' + new_members[i] + ' was added to room chat</td><td></td></tr>')
                        members_names.push(new_members[i])
                    }
                }
                if((drop_members = members_names.diff(result['refresh_members_names'])) && drop_members.length)
                {
                    for (i = 0; i < drop_members.length; i++ ) {
                        $(".chat table tbody").append('<tr class="bot_message"><td></td><td>Member ' + drop_members[i] + ' was disconnected from chat room</td><td></td></tr>')
                        members_names.splice(members_names.indexOf(drop_members[i]), 1)
                    }
                }
                $(".members_names").html('Members of chat: ' + result['members_list'])

                if (result == 'disconnected')
                {
                    alert('You are disconnected.\nRedirecting to active chats.')
                    document.location = '<%= chats_path %>'
                }
                else if (result == 'removed')
                {
                    add_allert = ''
                    if (is_current_user_owner)
                    {
                        add_allert = 'Last member of chat has left from the chat room.\n'
                    }
                    alert(add_allert + 'This chat room has been removed.\nRedirecting to active chats.')
                    document.location = '<%= chats_path %>'
                }
                else if(result["html"])
                {
                    $(".chat table tbody").append(result["html"])
                    new_count_messages = result['all_messages_count']
                    $('#num_unread_msgs').text(result['num_unread_msgs'])
                    count_messages += new_count_messages

                    $('.last_message').fadeTo('slow', 1, function()
                    {
                        $(this).css({'background-color': '#eeeeee'});
                    }).delay(300).fadeTo('slow', 1);

                    $('.last_message').css("background-color", "#337ab7");
                    $('tr.last_message').removeAttr('class');
                }
                else
                {
                    // alert("Something goes wrong");
                }

                $('.chat').scrollTop($('.chat')[0].scrollHeight);
            }});
		}

		setInterval(refresh, 1000)


		$("#new_message").bind("ajax:complete", function(event, xhr, status){
			$("#message_text").val('');
		});

		function reset_unread_msgs(){
			if($('#num_unread_msgs').html())
			{
				$.ajax({
				url: reset_unread_msgs_url, 
				success: function(result){
			        if(result)
			        {
			        	$('#num_unread_msgs').text("0")
			        }
			        else
			        {
			        	alert("Something goes wrong");
			        }
		    	}});
	    	}			
		}

		if ($('#num_unread_msgs') != 0)
		{
			$(document).keypress(function(event){
				reset_unread_msgs()
				if ((event.keyCode == 10 || event.keyCode == 13) && event.ctrlKey)
				{
					$("#send_message").click()
				}
			});

			$(document).mousemove(function(event){
				reset_unread_msgs()
			});			
		}

});
 </script>